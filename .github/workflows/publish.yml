name: Publish to PyPI

on:
  push:
    branches:
      - 'master'
    tags:
      - '*'

jobs:
  publish:
    name: CPython ${{ matrix.py }} for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install Rust Nightly
        uses: actions-rs/toolchain@master
        with:
          toolchain: nightly
          default: true
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.py }}
          architecture: x64
      - name: Install Pipenv
        run: |
          set -xueo pipefail
          pip3 install --user pipenv
          echo ::add-path::$HOME/.local/bin
        shell: bash
      - name: Setup Virtualenv
        run: |
          set -xueo pipefail
          pipenv --python ${{ matrix.py }} install --dev
          echo "::add-path::$(pipenv --venv)/bin"
          # so windows folks can find the python*.lib
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            ver=$(pipenv --bare run python -c 'import platform; print(platform.python_version())')
            real_path="C:\\\\hostedtoolcache\\\\windows\\\\Python\\\\$ver\\\\x64\\\\libs"
            echo "::set-env name=EXTRA_RUST_ARGS::-L$real_path"
          fi
        shell: bash
      - name: Upload to PyPI
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" != "windows-latest" ]]; then
            for py in /opt/hostedtoolcache/Python/*/x64/bin; do
              PATH="$PATH:$py"
            done
          fi
          pipenv run maturin publish ${EXTRA_RUST_ARGS:+--rustc-extra-args=$EXTRA_RUST_ARGS} \
            -r https://test.pypi.org/legacy/ \
            -u __token__
        env:
          MATURIN_PASSWORD: ${{ secrets.pypy_token }}
